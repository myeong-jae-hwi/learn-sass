@use "sass:meta";
@use "sass:math";

// 문자열
$noting: "ABC";

//number
$num: 101;
$unit: 180px;

//string
$pretendard: Pretendard;
$spoqa: "Spoqa Han Sans Neo";

//color
$hex: #f94e07;
$keyword: purple;
$color-function: hsl(18, 95%, 50%);

//bool
$yes: true;
$no: false;

//list
$units: 20px 10px 0;
$font-families: Pretendard, Helvetica, sans-serif;
$square-bracket: [Verdana sans-serif];

//map
$theme: (
  light: (
    forground: #121916,
    background: #e7e6e7,
  ),
  dark: (
    background: #121916,
    forground: #e7e6e7,
  ),
);

.container {
  animation-delay: 9s + 21s; // 30s
}

@debug "타입: " + meta.type-of($theme); // Debug: map

@debug "타입: " + meta.type-of($units); // Debug: list
@debug "타입: " + meta.type-of($font-families); // Debug: list
@debug "타입: " + meta.type-of($square-bracket); // Debug: list

@debug "타입: " + meta.type-of($yes); // Debug: bool
@debug "타입: " + meta.type-of($no); // Debug: bool

@debug "타입: " + meta.type-of($hex); // Debug: color
@debug "타입: " + meta.type-of($keyword); // Debug: color
@debug "타입: " + meta.type-of($color-function); // Debug: color

@debug "타입: " + meta.type-of($pretendard); // Debug: string
@debug "타입: " + meta.type-of($spoqa); // Debug: string

@debug "타입: " + meta.type-of($num); // Debug: number
@debug "타입: " + meta.type-of($unit); // Debug: number

@debug "타입: " + meta.type-of($noting); // null

@function removeUnit($temp) {
  @return math.div($temp, 1px);
}

@debug removeUnit(100px); // Debug: 100
